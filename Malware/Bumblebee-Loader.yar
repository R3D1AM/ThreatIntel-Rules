rule Bumblebee_Loader_Complete
{
    meta:
        author = "R3D1AM"
        description = "Comprehensive detection of Bumblebee Loader malware using static IOCs, behavioral patterns, encryption routines, and network IOCs."
        date = "2024-11-29"
        version = "3.0"
        sources = [
            "Cybereason", "SEKOIA", "Checkpoint Research", 
            "Malware technical analysis reports", 
            "DFIR case studies"
        ]
        references = [
            "https://cybereason.com/",
            "https://sekoia.io/",
            "https://thedfirreport.com/",
            "https://malpedia.caad.fkie.fraunhofer.de/"
        ]
        notes = "Combines hashes, C2 IOCs, packer traits, memory patterns, encryption routines, and payload artifacts."

    strings:
        // File artifacts
        $file1 = "c00p.sys" ascii nocase
        $file2 = "n3zarek.dll" ascii wide
        $file3 = "StolenImages_Evidence.iso" ascii wide

        // Recon and persistence strings
        $recon_tool = "AdFind" ascii wide
        $registry_key = "Microsoft\\Windows\\CurrentVersion\\Run\\" ascii wide

        // Packer and memory routines
        $packer_pattern1 = { 68 ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? 50 8B 85 ?? ?? ?? ?? }
        $packer_pattern2 = { FF 15 ?? ?? ?? ?? 89 45 FC 8B 55 FC 68 ?? ?? ?? ?? }
        $api_write_mem = "WriteProcessMemory" ascii wide
        $api_alloc_mem = "VirtualAlloc" ascii wide
        $api_exec = "WinExec" ascii wide

        // Encryption and decryption patterns
        $aes_pattern = { 31 C0 89 C1 89 C2 89 C3 89 C6 }
        $rc4_pattern = { 8B 45 ?? 50 FF 15 ?? ?? ?? ?? 8B }
        $xor_key = "iKInPE9WrB" ascii wide

        // C2 infrastructure and network patterns
        $c2_url_pattern = /https?:\/\/[a-zA-Z0-9\-_\.\/]+/
        $c2_ip_pattern = /(23\.82\.140\.\d+|51\.68\.144\.\d+|192\.236\.161\.\d+)/

        // Observed strings
        $black_string = "BLACK" ascii wide
        $iso_name = "StolenImages_Evidence.iso" ascii wide

    hashes:
        sha256 = (
            "e2147cb6039d1b065b0d59d6e60a1e5f526415afefdfddcbbd7b1e8a33194d64",
            "064d21a62fc8718a707c3cf6ca91fddeb2fd407dfee47a923638a91a57b338a4",
            "5c2aea9772cec74f58c02ccf758fdb27",
            "705f3cf6b883657b9ac6634ec50e841a",
            "94f7bc1e910866c5ed1b06242e82c8d5379d143123ff255b87fc78db98c49ae2",
            "2ca8fcce17d0ca5dc6c260c34b14b969fbc20c4a4520e19aed0a0be23a199243"
        )

    condition:
        uint16(0) == 0x5A4D and
        filesize < 600KB and
        (
            // Match on artifacts, memory routines, or encryption patterns
            2 of ($file*) or
            2 of ($packer_pattern*) or
            $aes_pattern or
            $rc4_pattern or
            $xor_key or
            $black_string or
            $recon_tool or
            $registry_key or
            // Match known C2 patterns or hashes
            $c2_url_pattern or
            $c2_ip_pattern or
            file.hash.sha256 in hashes
        )
}
